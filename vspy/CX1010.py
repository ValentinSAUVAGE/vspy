#!/usr/bin/env python3
# -*- coding: utf-8 -*-
""" Created on Sun Mar 24 17:36:20 2019 - @author: valentinsauvage """

import numpy as np

################################################################################################################    

def X95200(res):
    """ 
    Model : CX1010
    Calibration : By IAS in Dracula
    Use : none
    Domaine : 90 mK to 1K
    """
    
    Fit1 = np.poly1d([
       -5.3940428776371985e-11,  3.0932669513491815e-09,
       -6.2768298783778650e-08,  3.6970149695481176e-07,
        3.8000241454565777e-06, -3.7519687880262006e-05,
       -3.7291767761370978e-04,  3.0440847229465844e-03,
        4.0495418894469705e-02, -2.3927856985434073e-01,
       -3.9913176255150704e+00,  2.6075634106493137e+01,
        2.9690030058560842e+02, -4.2348139778749555e+03,
        2.0883152791030905e+04, -4.7269041574113849e+04,
        4.0170953385680230e+04])
    
    Fit2 = np.poly1d([ 
        3.9418862513527481e-08, -1.0489220090098556e-06,
        6.0396347061434154e-06,  3.8841759270626226e-05,
       -1.5781354892531043e-04, -2.5612719198136857e-03,
       -6.9555335182550368e-03,  8.5140125396790764e-02,
        9.5241455683697152e-01,  2.3040114441678043e+00,
       -3.4840444638971874e+01, -3.7611945417808533e+02,
       -6.3417643737828246e+02,  1.7498519963103547e+04,
        1.3487557669193207e+05, -4.9232988556921104e+05,
       -9.7113208915244266e+06,  6.1615886942682520e+07,
       -1.0350269910184886e+08])
    
    if res > 1864.16:
        Temperature = np.exp(Fit1(np.log(res)))
    elif res <= 1864.16: 
        Temperature = np.exp(Fit2(np.log(res)))
        
    return Temperature

################################################################################################################    

def X95222(res):
    """ 
    Model : CX1010
    Calibration : By IAS in Dracula
    Use : none
    Domaine : 90 mK to 1K
    """
    
    Fit1 = np.poly1d([
       -7.1932692475044488e-03,  2.5642343558267944e-01,
       -3.3201518277304753e+00,  1.2742272662080392e+01])
    
    Fit2 = np.poly1d([
       -6.2190801209109903e-01,  3.2207836528577019e+01,
       -7.1436402897996766e+02,  8.7963452946109956e+03,
       -6.4942865198768428e+04,  2.8747871985587326e+05,
       -7.0648201471268316e+05,  7.4355864605389908e+05])
    
    if res > 3002.58 :
        Temperature = np.exp(Fit1(np.log(res)))
    elif res <= 3002.58 : 
        Temperature = np.exp(Fit2(np.log(res)))
        
    return Temperature

################################################################################################################    


def X100737(res):
    """ 
    Model : CX1010
    Calibration : By IAS in Dracula
    Use : none
    Domaine : 105 mK to 1.2K
    """
    
    Fit1 = np.poly1d([
       -6.4095999597119498e-12,  3.0202657371342627e-10,
       -4.5673311129501884e-09,  7.9480590097656398e-09,
        3.2834536216616977e-07, -1.8390785015064774e-07,
       -2.7220420385509498e-05, -8.8130891649948766e-05,
        1.9015109251918410e-03,  1.5595200918094564e-02,
       -9.4485488008847582e-02, -1.6348402602029890e+00,
        3.0613965461454375e+00,  1.3801277616684294e+02,
       -2.2806180353774963e+02, -1.0650206482798347e+04,
        8.6006556425687828e+04, -2.6904279431452067e+05,
        3.1480817763309676e+05])
    
    Fit2 = np.poly1d([
        -1.2728635480586328,  8.275686032717756 ])
    
    if res > 633.97 :
        Temperature = np.exp(Fit1(np.log(res)))
    elif res <= 633.97 : 
        Temperature = np.exp(Fit2(np.log(res)))
        
    return Temperature

################################################################################################################    


def X95220(res):
    """ 
    Model : CX1010
    Calibration : By IAS in Dracula
    Use : none
    Domaine : 100 mK to 1.2K
    """
    
    Fit1 = np.poly1d([
       -7.7575010190670837e-08,  4.7999206315175977e-06,
       -1.1498241577676967e-04,  1.1609849435538057e-03,
       -1.4789281973765772e-04, -8.5124963046266905e-02,
        2.0547566667945763e-01,  6.2702278447524975e+00,
       -2.3300000868177296e+01, -4.5248895798037643e+02,
        2.8232520037690851e+03,  2.4600478855750160e+04,
       -3.7303093456075230e+05,  1.9340371292593835e+06,
       -4.8079867333524358e+06,  4.8286867323723342e+06])
    
    Fit2 = np.poly1d([
       -4.4481325416617121e-07,  3.9342917893827847e-06,
        1.7479291868302523e-05, -2.4772101505309487e-05,
       -7.7796352856887097e-04, -5.4809913503910583e-03,
       -1.8730519363122373e-02,  4.3098509187411531e-02,
        1.1831847128350743e+00,  9.8920038118825886e+00,
        4.8563639958227405e+01,  5.7743737745502145e+01,
       -1.5941803962630545e+03, -1.8723288412905673e+04,
       -1.0962586123679540e+05, -1.1933961373377763e+05,
        4.7882105110539701e+06,  4.4305255556503676e+07,
       -2.2075961460414621e+08])
    
    if res > 740.02 :
        Temperature = np.exp(Fit1(np.log(res)))
    elif res <= 740.02 : 
        Temperature = np.exp(Fit2(np.log(res)))
        
    return Temperature