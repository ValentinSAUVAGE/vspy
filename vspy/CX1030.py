#!/usr/bin/env python3
# -*- coding: utf-8 -*-
""" Created on Sun Mar 24 17:36:20 2019 - @author: valentinsauvage """

import numpy as np

################################################################################################################    

def X52396(res):
    """ 
    Model : CX1030
    Calibration : From Lake Shore
    Use : PILOT - Bolometer TRANS 
    Domaine : 259 mK to 300 K
    """
    
    Fit1 = np.poly1d([ 
        9.4054601419141421e-05, -6.5302585458301941e-03,
        1.9516262170723037e-01, -3.2496541193199575e+00,
        3.2349360883801971e+01, -1.8758421654178932e+02,
        5.0901649649945085e+02,  3.8067003050505321e+02,
       -6.0242142453186261e+03,  1.1062656812149826e+04])
    
    Fit2 = np.poly1d([ 
        2.3824215355186790e-08, -1.1892405624712438e-06,
        2.3107896067147333e-05, -1.9193855854076315e-04,
        8.5383980044069870e-05,  8.5521758780558316e-03,
       -1.7415940516189929e-02, -4.0535552863372110e-01,
        9.8866820458953153e-01,  2.0050978684235577e+01,
       -6.0717723270189609e+01, -9.4227311586956580e+02,
        5.0166512471494980e+03,  2.9862286000532873e+04,
       -4.1240987923486001e+05,  1.9668862731991003e+06,
       -5.0155770706868181e+06,  6.8638578468702640e+06,
       -3.9915403982235673e+06])
    
    if res > 1762.9 :
        Temperature = np.exp(Fit1(np.log(res)))
    elif res <= 1762.9 : 
        Temperature = np.exp(Fit2(np.log(res)))
        
    return Temperature

################################################################################################################    

def X52393(res):
    
    """ 
    Model : CX1030
    Calibration : From Lake Shore
    Use : PILOT - Evaporator 
    Domaine : 259 mK to 300 K
    """
    
    Fit1 = np.poly1d([ 
        2.3176925961323656e-13, -1.1074902562729106e-11,
        1.6503721950354460e-10, -1.3423150011189673e-10,
       -1.3554724562193887e-08, -1.2222218181386775e-08,
        1.1853703824380874e-06,  6.0103863895773611e-06,
       -8.2921063658714423e-05, -9.1432306605224742e-04,
        4.0205118356548249e-03,  9.3447098261752098e-02,
       -1.9172717305286011e-01, -7.4623381940440359e+00,
        3.7232561036938186e+01,  1.2584222103959596e+02,
       -1.2705727921463574e+03,  2.4717108633681692e+03])
    
    Fit2 = np.poly1d([
       -1.7694182246791105e-09,  5.3585833341220153e-08,
       -3.3282811192283528e-07, -4.4838750149264336e-06,
        4.5319569592753800e-05,  2.6677052737191100e-04,
       -2.7416425507064929e-03, -2.0227081825767365e-02,
        1.3303724707898229e-01,  1.4046576926795251e+00,
       -6.2219844954713546e+00, -8.3140336980731249e+01,
        4.1873625925274814e+02,  3.6205581814401276e+03,
       -4.1054089447320985e+04,  1.6425482646604872e+05,
       -3.1358222375152184e+05,  2.4017970083190111e+05])
    
    if res > 1940.83 :
        Temperature = np.exp(Fit1(np.log(res)))
    elif res <= 1940.83 : 
        Temperature = np.exp(Fit2(np.log(res)))
        
    return Temperature

################################################################################################################    

def X54545(res):
    
    """ 
    Model : CX1030
    Calibration : By IAS in Dracula
    Use : none
    Domaine : 290 mK to 1 K
    """
    
    Fit1 = np.poly1d([ 
        6.9812163396014247e-10, -2.0738041552262874e-08,
        9.7369369629440339e-08,  1.4785042924404931e-06,
        4.3875607738286318e-07, -1.1258634991719640e-04,
       -1.0087516853829834e-03, -7.3669937142207073e-05,
        8.6903958778398363e-02,  9.0774898009707305e-01,
        1.5941691547256431e+00, -6.8012919144965281e+01,
       -8.3113437278597667e+02, -1.0029113147980908e+03,
        7.7639120355331557e+04,  5.6355920574187301e+05,
       -8.9969525447681192e+06,  2.5668515370345090e+07])
    
    Fit2 = np.poly1d([
       -1.6038432216073473e-05,  6.3943358530503883e-04,
       -7.9036726938241930e-03,  3.0630050710492547e-03,
        4.9483673386166410e-01,  3.3311803234660492e-01,
       -3.4424482237949903e+01, -1.0339524198120455e+02,
        2.4554896118558886e+03,  9.3708068410278647e+03,
       -2.3259265230678231e+05,  1.1122584686748530e+06,
       -1.7711777166929119e+06])
    
    if res > 7304.54 :
        Temperature = np.exp(Fit1(np.log(res)))
    elif res <= 7304.54 : 
        Temperature = np.exp(Fit2(np.log(res)))
        
    return Temperature

################################################################################################################    

def X52399(res):
    
    """ 
    Model : CX1030
    Calibration : By Lakeshore
    Use : PILOT - Bolometer Reflex
    Domaine : 259 mK to 120 K
    """
    
    Fit1 = np.poly1d([ 
        1.6176437949752178e-11, -9.3034171751230004e-10,
        1.8374806267017642e-08, -8.7256168370230304e-08,
       -1.4043948587352553e-06,  8.4621625585380361e-06,
        1.5822601391090945e-04, -4.1520405467888844e-04,
       -1.8195918912318677e-02, -1.8189825394418851e-02,
        1.9188765444241285e+00,  6.2329973203876854e+00,
       -2.0523479642015101e+02, -4.3878928952188846e+02,
        2.4752518349072099e+04, -1.8558850656219191e+05,
        6.0133441095082124e+05, -7.5469253606123745e+05])
    
    Fit2 = np.poly1d([
       -3.5840317416817128e-09,  1.3471172396465384e-07,
       -1.6874755103357719e-06,  3.8936969158340179e-06,
        6.7611693026998080e-05, -1.5818146200941092e-04,
       -3.5188689358214144e-03,  2.5056781360534048e-04,
        1.7769078895783116e-01,  4.0317452603196430e-01,
       -8.2539392906641726e+00, -3.1509210807357764e+01,
        4.0960373133410440e+02,  1.1115350036953482e+03,
       -2.4459876919514376e+04,  1.1312292503179627e+05,
       -2.3294902014767245e+05,  1.8743679089361138e+05])
    
    if res > 1911.1342951421:
        Temperature = np.exp(Fit1(np.log(res)))
    elif res <= 1911.1342951421: 
        Temperature = np.exp(Fit2(np.log(res)))
        
    return Temperature

################################################################################################################    

