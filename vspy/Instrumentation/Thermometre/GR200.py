#!/usr/bin/env python3
# -*- coding: utf-8 -*-
""" Created on Sun Mar 24 17:36:20 2019 - @author: valentinsauvage """

import numpy as np

################################################################################################################    

def X29698(res):
    """ 
    Model : GR200
    Calibration : Neel and IAS
    Use : none
    Domaine : 100 mK to 101 K
    """
    
    Fit1 = np.poly1d([
       -7.7645401767806713e-06,  4.6014572558606581e-04,
       -1.1713658635767215e-02,  1.6676701615869444e-01,
       -1.4454487253127875e+00,  7.7489375854194691e+00,
       -2.4699131637632522e+01,  4.0813847082424019e+01,
       -2.2866445486805542e+01])
    
    Fit2 = np.poly1d([
       -2.1393870799673170e-03,  4.6393572758005333e-02,
       -4.0881120536234206e-01,  1.8728228598233945e+00,
       -4.7183954716184315e+00,  6.3011355681108130e+00,
       -3.7969391296526980e+00, -6.1219088484332429e-01,
        5.6245421655213974e+00])
    
    if res > 191.69099999999997 :
        Temperature = np.exp(Fit1(np.log(res)))
    elif res <= 191.69099999999997 : 
        Temperature = np.exp(Fit2(np.log(res)))
        
    return Temperature

################################################################################################################    

def X21803(res):
    """ 
    Model : GR200
    Calibration : IAS
    Use : none
    Domaine : 50 mK to 14 K
    """
    
    Fit1 = np.poly1d([ 
        4.9723603556593536e-04, -2.2212587749881468e-02,
        4.0712805969903459e-01, -3.9222299568664223e+00,
        2.1011932041893935e+01, -6.0010662064932916e+01,
        7.0949450280502916e+01])
    
    Fit2 = np.poly1d([ 
        5.9357926037518517e-04, -1.2922376601778453e-02,
        9.8758896958350925e-02, -2.1033127563281789e-01,
       -8.9995859536863310e-01,  2.8857132250410307e+00,
        1.3576359343310495e+01, -2.7710379348598302e+01,
       -2.2333412160057929e+02,  1.5314163358953920e+02,
        3.4418581910935427e+03, -1.3794073165495440e+01,
       -5.2182124696409985e+04,  3.1214832116491376e+04,
        7.4924039776978351e+05, -2.9154834828974279e+06,
        5.0227500792081086e+06, -4.3459493946485873e+06,
        1.5428532965781309e+06])
    
    if res > 46.2587 :
        Temperature = np.exp(Fit1(np.log(res)))
    elif res <= 46.2587 : 
        Temperature = np.exp(Fit2(np.log(res)))
        
    return Temperature

################################################################################################################    

def X29743(res):
    """ 
    Model : GR200
    Calibration : IAS
    Use : none
    Domaine : 100 mK to 101 K
    """
    
    Fit1 = np.poly1d([ 
        1.6589491134426370e-08, -1.5966784575376218e-06,
        6.7110561692586051e-05, -1.5784612546152757e-03,
        2.1342206654870580e-02, -1.2268598228028550e-01,
       -1.0771040701834929e+00,  3.1089720615950128e+01,
       -3.4145991449181298e+02,  2.2915459921809329e+03,
       -1.0061217996420792e+04,  2.8386178763364140e+04,
       -4.6956419164222651e+04,  3.4745578220444702e+04])
    
    Fit2 = np.poly1d([ 
            0.02569182390468437, -1.1453385370542426 ,
            5.203934728768783  ])
    
    if res > 274.245 :
        Temperature = np.exp(Fit1(np.log(res)))
    elif res <= 274.245 : 
        Temperature = np.exp(Fit2(np.log(res)))
        
    return Temperature